services:
  larasmart-nginx:
    build:
      context: .docker/nginx
    ports:
      - "8081:8081"
    volumes:
      - "./backend:/var/www/html"
    depends_on:
      - larasmart-fpm
    x-def-logging: &default-logging
      logging:
        driver: "loki"
        options:
          loki-url: "http://localhost:3100/loki/api/v1/push"
          loki-batch-size: "100"
          loki-retries: 2
          loki-max-backoff: 1000ms
          loki-timeout: 1s
    <<: *default-logging
    networks:
      - larasmart-network

  larasmart-fpm:
    container_name: larasmart-fpm
    build:
      context: .docker/php
    volumes:
      - "./backend:/var/www/html"
    environment:
      - XDG_CONFIG_HOME=/tmp
    depends_on:
      larasmart-mysql:
        condition: service_healthy
    <<: *default-logging
    networks:
      - larasmart-network

  larasmart-mysql:
    build:
      context: .docker/mysql
    ports:
      - "3301:3306"
    volumes:
      - mysql-storage:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    <<: *default-logging
    networks:
      - larasmart-network

  larasmart-redis:
    build:
      context: .docker/redis
    ports:
      - "6379:6379"
    volumes:
      - redis-storage:/data
    depends_on:
      - larasmart-fpm
    <<: *default-logging
    networks:
      - larasmart-network

  larasmart-prometheus:
    build:
      context: .docker/prometheus
    ports:
      - "9090:9090"
    networks:
      - larasmart-network
    command:
      - "--config.file=/etc/prometheus/config.yml"
    restart: unless-stopped

  larasmart-grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - larasmart-prometheus
      - larasmart-loki
    networks:
      - larasmart-network

  larasmart-promtail:
    build:
      context: .docker/promtail
    volumes:
      - /var/log:/var/log/host
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - larasmart-network

  larasmart-loki:
    build:
      context: .docker/loki
    ports:
      - "3100:3100"
    depends_on:
      - larasmart-prometheus
    command:
      - "--config.file=/etc/loki/config.yaml"
    networks:
      - larasmart-network

networks:
  larasmart-network:

volumes:
  grafana-storage:
  redis-storage:
  mysql-storage: